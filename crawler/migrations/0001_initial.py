# Generated by Django 5.2.6 on 2025-09-19 07:53

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_ko', models.CharField(max_length=100)),
                ('logo_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrawlLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=20)),
                ('products_crawled', models.IntegerField(default=0)),
                ('products_updated', models.IntegerField(default=0)),
                ('products_new', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=100, unique=True)),
                ('source', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('TOP', '상의'), ('BOTTOM', '하의'), ('OUTER', '아우터'), ('DRESS', '원피스'), ('SHOES', '신발'), ('BAG', '가방'), ('ACC', '액세서리')], max_length=20)),
                ('subcategory', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('M', '남성'), ('F', '여성'), ('U', '공용')], max_length=1)),
                ('original_price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('discount_rate', models.IntegerField(default=0)),
                ('description', models.TextField()),
                ('material', models.CharField(blank=True, max_length=200)),
                ('colors', models.JSONField(default=list)),
                ('sizes', models.JSONField(default=list)),
                ('main_image_url', models.URLField()),
                ('image_urls', models.JSONField(default=list)),
                ('product_url', models.URLField()),
                ('tags', models.JSONField(default=list)),
                ('style_tags', models.JSONField(default=list)),
                ('rating', models.FloatField(default=0.0)),
                ('review_count', models.IntegerField(default=0)),
                ('sales_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('stock_status', models.CharField(default='in_stock', max_length=50)),
                ('crawled_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_checked', models.DateTimeField(default=django.utils.timezone.now)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.brand')),
            ],
            options={
                'ordering': ['-crawled_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='crawler.product')),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['source', 'product_id'], name='crawler_pro_source_987865_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'gender'], name='crawler_pro_categor_c22d49_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['brand'], name='crawler_pro_brand_i_90eae8_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['-like_count'], name='crawler_pro_like_co_a791da_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['-sales_count'], name='crawler_pro_sales_c_a1b722_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sale_price'], name='crawler_pro_sale_pr_bc1370_idx'),
        ),
    ]
